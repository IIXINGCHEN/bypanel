---
##
## -------------------------
## |     B Y P A N E L     |
## -------------------------
##
## Local LAMP/LEMP stack
##
##
## ${VARIABLE:-default} will evaluate to default if VARIABLE is unset or empty.
## ${VARIABLE-default}  will evaluate to default only if VARIABLE is unset.
##
##
## -- DO NOT EDIT THIS FILE --
##
## Copy 'docker-compose.override.yml-example' to 'docker-compose.override.yml'
## and edit this file with your custom changes (override or even new services).
##
## Edit '.env' for configuration.
##
## If '.env' does not exist, copy 'env-example' to '.env'
##   $ cp env-example .env
##

version: '3'

################################################################################
# SERVICES
################################################################################
services:

  # ------------------------------------------------------------
  # Nginx
  # ------------------------------------------------------------
  nginx:
    image: bypanel/nginx:${NGINX_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: nginx
    profiles:
      - nginx
      - lnmp

    environment:

      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DEBUG_RUNTIME=1
      - DOCKER_LOGS

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

    ports:
      # ---- Format: ----
      # [HOST-ADDR : ] HOST-PORT : DOCKER-PORT
      - "${HOST_PORT_NGINX}:80"
      - "${HOST_PORT_NGINX_SSL}:443"

    networks:
      - app_net

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount custom web server config directory
      - ${BYPANEL_PATH}/cfg/nginx:/etc/nginx:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/nginx:/var/log/nginx:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # OpenResty
  # ------------------------------------------------------------
  openresty:
    image: bypanel/openresty
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: openresty
    profiles:
      - openresty

    environment:

      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DEBUG_RUNTIME=1
      - DOCKER_LOGS

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

    ports:
      # ---- Format: ----
      # [HOST-ADDR : ] HOST-PORT : DOCKER-PORT
      - "${HOST_PORT_OPENRESTY}:80"
      - "${HOST_PORT_OPENRESTY_SSL}:443"

    networks:
      - app_net

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount custom web server config directory
      - ${BYPANEL_PATH}/cfg/openresty:/etc/nginx:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/openresty:/var/log/nginx:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # MySQL Database
  # ------------------------------------------------------------
  mysql:
    image: bypanel/mysql:${MYSQL_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: mysql
    profiles:
      - mysql
      - lnmp

    environment:
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

    ports:
      # [local-machine:]local-port:docker-port
      - "${HOST_PORT_MYSQL}:3306"

    networks:
      - app_net

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount bypanel user-defined cnf files in order
      # to overwrite the MySQL server configuration
      #- ${BYPANEL_PATH}/cfg/mysql.cnf:/etc/mysql/conf.d/bypanel.cnf:ro${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/${MYSQL_SERVER}:/etc/mysql/docker-default.d:ro${MOUNT_OPTIONS}

      # Mount MySQL Data directory
      - ${BASE_DATA_PATH}/${MYSQL_SERVER}:/var/lib/mysql:rw${MOUNT_OPTIONS}

      # Mount DB Backup directory
      - ${BASE_DATA_PATH}/backups:/shared/backups:rw${MOUNT_OPTIONS}

  mysql-cron-backup:
    image: fradelg/mysql-cron-backup
    # Always pull docker image
    #pull_policy: always
    restart: unless-stopped
    hostname: mysql-cron-backup
    depends_on:
      - mysql

    profiles:
      - mysql-cron-backup

    environment:
      - TZ=${TIMEZONE}
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASS=${MYSQL_ROOT_PASSWORD}
      - MAX_BACKUPS=15
      - INIT_BACKUP=0
      # Every day at 03:00
      - CRON_TIME=0 3 * * *
      # Make it small
      - GZIP_LEVEL=9
      # As of MySQL 8.0.21 this is needed
      - MYSQLDUMP_OPTS=--no-tablespaces

    networks:
      - app_net

    volumes:
      - ${BASE_DATA_PATH}/backups:/backup:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PostgreSQL
  # ------------------------------------------------------------
  pgsql:
    image: postgres:${PGSQL_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: pgsql
    profiles:
      - pgsql
    environment:
      - TZ=${TIMEZONE}
      - POSTGRES_USER=${PGSQL_ROOT_USER}
      - POSTGRES_PASSWORD=${PGSQL_ROOT_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=${PGSQL_HOST_AUTH_METHOD:-trust}
      - PGDATA=/var/lib/postgresql/data/pgdata

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_PGSQL}:5432"

    networks:
      - app_net

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount PostgreSQL Data directory
      - ${BASE_DATA_PATH}/pgsql-${PGSQL_SERVER}:/var/lib/postgresql/data/pgdata:rw${MOUNT_OPTIONS}

      # Mount DB Backup directory
      - ${BASE_DATA_PATH}/backups:/shared/backups:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # Redis
  # ------------------------------------------------------------
  redis:
    image: redis:${REDIS_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: redis
    profiles:
      - redis

    # Apply custom arguments to redis startup
    command: sh -c "echo 1 > /proc/sys/vm/overcommit_memory && redis-server ${REDIS_ARGS:- }"

    environment:
      - TZ=${TIMEZONE}
      - REDIS_ARGS=${REDIS_ARGS:- }

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_REDIS}:6379"

    sysctls:
      - net.core.somaxconn=1024

    privileged: true

    networks:
      - app_net

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount Redis Data directory
      - ${BASE_DATA_PATH}/redis-${REDIS_SERVER}:/data:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # Memcached
  # ------------------------------------------------------------
  memcached:
    image: memcached:${MEMCACHED_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: memcached
    profiles:
      - memcached

    environment:
      - TZ=${TIMEZONE}

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_MEMCACHED}:11211"

    networks:
      - app_net

  # ------------------------------------------------------------
  # MongoDB
  # ------------------------------------------------------------
  mongo:
    image: mongo:${MONGO_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: mongo
    profiles:
      - mongo

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_MONGO}:27017"

    environment:
      - TZ=${TIMEZONE}

    networks:
      - app_net

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount MongoDB Data directory
      - ${BASE_DATA_PATH}/mongo-${MONGO_SERVER}:/data/db:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP5.3
  # ------------------------------------------------------------
  php53:
    image: bypanel/php-fpm:5.3-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php53
    profiles:
      - php53

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-5.3:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-5.3:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-5.3:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-5.3:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP5.4
  # ------------------------------------------------------------
  php54:
    image: bypanel/php-fpm:5.4-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php54
    profiles:
      - php54

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-5.4:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-5.4:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-5.4:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-5.4:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP5.5
  # ------------------------------------------------------------
  php55:
    image: bypanel/php-fpm:5.5-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php55
    profiles:
      - php55

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-5.5:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-5.5:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-5.5:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-5.5:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP5.6
  # ------------------------------------------------------------
  php56:
    image: bypanel/php-fpm:5.6-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php56
    profiles:
      - php56

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-5.6:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-5.6:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-5.6:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-5.6:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP7.0
  # ------------------------------------------------------------
  php70:
    image: bypanel/php-fpm:7.0-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php70
    profiles:
      - php70

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-7.0:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-7.0:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-7.0:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-7.0:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP7.1
  # ------------------------------------------------------------
  php71:
    image: bypanel/php-fpm:7.1-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php71
    profiles:
      - php71

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-7.1:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-7.1:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-7.1:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-7.1:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP7.2
  # ------------------------------------------------------------
  php72:
    image: bypanel/php-fpm:7.2-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php72
    profiles:
      - php72

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-7.2:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-7.2:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-7.2:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-7.2:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP7.3
  # ------------------------------------------------------------
  php73:
    image: bypanel/php-fpm:7.3-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php73
    profiles:
      - php73

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-7.3:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-7.3:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-7.3:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-7.3:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP7.4
  # ------------------------------------------------------------
  php74:
    image: bypanel/php-fpm:7.4-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php74
    profiles:
      - php74

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-7.4:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-7.4:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-7.4:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-7.4:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP8.0
  # ------------------------------------------------------------
  php80:
    image: bypanel/php-fpm:8.0-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php80
    profiles:
      - php80

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-8.0:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-8.0:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-8.0:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-8.0:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP8.1
  # ------------------------------------------------------------
  php81:
    image: bypanel/php-fpm:8.1-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php81
    profiles:
      - php81

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-8.1:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-8.1:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-8.1:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-8.1:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP8.2
  # ------------------------------------------------------------
  php82:
    image: bypanel/php-fpm:8.2-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php82
    profiles:
      - php82
      - lnmp

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-8.2:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-8.2:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-8.2:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-8.2:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # PHP8.3
  # ------------------------------------------------------------
  php83:
    image: bypanel/php-fpm:8.3-prod
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: php83
    profiles:
      - php83

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP container
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

    networks:
      - app_net

    working_dir: /var/www

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${BASE_DATA_PATH}/webroot:/var/www:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${BASE_DATA_PATH}/logs/php-fpm-8.3:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount bypanel user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${BYPANEL_PATH}/cfg/php-ini-8.3:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${BYPANEL_PATH}/cfg/php-fpm-8.3:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount bypanel user-defined PHP-FPM startup *.sh scripts
      - ${BYPANEL_PATH}/cfg/php-startup-8.3:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${BYPANEL_PATH}/cfg/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

  # ------------------------------------------------------------
  # phpMyAdmin
  # ------------------------------------------------------------
  phpmyadmin:
    image: phpmyadmin:${PMA_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: phpmyadmin
    profiles:
      - phpmyadmin
    environment:
      - TZ=${TIMEZONE}
      - PMA_ARBITRARY=${PMA_ARBITRARY}
      - PMA_HOST=mysql
      - PMA_ABSOLUTE_URI=${PMA_ABSOLUTE_URI}
      - PMA_PORTS=${HOST_PORT_MYSQL}
    networks:
      - app_net

  # ------------------------------------------------------------
  # sftpgo
  # ------------------------------------------------------------
  sftpgo:
    image: drakkan/sftpgo:${SFTPGO_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: sftpgo
    profiles:
      - sftpgo
    environment:
      - TZ=${TIMEZONE}
      - SFTPGO_FTPD__BINDINGS__0__PORT=${SFTPGO_FTPD_PORT}
      - SFTPGO_FTPD__PASSIVE_PORT_RANGE__START=${SFTPGO_FTPD_PASSIVE_PORT_RANGE_START}
      - SFTPGO_FTPD__PASSIVE_PORT_RANGE__END=${SFTPGO_FTPD_PASSIVE_PORT_RANGE_END}
    ports:
      # ---- Format: ----
      # [HOST-ADDR : ] HOST-PORT : DOCKER-PORT
      - "${SFTPGO_FTPD_WEB_ADMIN_PORT}:8080"
      - "${SFTPGO_FTPD_PORT}:${SFTPGO_FTPD_PORT}"
      - "${SFTPGO_FTPD_PASSIVE_PORT_RANGE_START}-${SFTPGO_FTPD_PASSIVE_PORT_RANGE_END}:${SFTPGO_FTPD_PASSIVE_PORT_RANGE_START}-${SFTPGO_FTPD_PASSIVE_PORT_RANGE_END}"

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount var sftpgo
      - ${BASE_DATA_PATH}/sftpgo:/var/lib/sftpgo:rw${MOUNT_OPTIONS}

      # Mount data
      - ${BASE_DATA_PATH}/webroot:/srv/sftpgo/data:rw${MOUNT_OPTIONS}

    networks:
      - app_net

  # ------------------------------------------------------------
  # rabbitmq
  # ------------------------------------------------------------
  rabbitmq:
    image: rabbitmq:${RABBITMQ_SERVER}
    # Always pull docker image
    #pull_policy: always
    restart: always
    hostname: rabbitmq
    profiles:
      - rabbitmq
    environment:
      - TZ=${TIMEZONE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    ports:
      # ---- Format: ----
      # [HOST-ADDR : ] HOST-PORT : DOCKER-PORT
      - "${HOST_PORT_RABBITMQ}:5672"
      - "${HOST_PORT_RABBITMQ_MANAGEMENT}:15672"

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount var sftpgo
      - ${BASE_DATA_PATH}/rabbitmq:/var/lib/rabbitmq:rw${MOUNT_OPTIONS}

    networks:
      - app_net

  chatgpt-web:
    image: chenzhaoyu94/chatgpt-web
    # Always pull docker image
    #pull_policy: always
    restart: unless-stopped
    hostname: chatgpt-web
    profiles:
      - chatgpt-web

    environment:
      - TZ=${TIMEZONE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ACCESS_TOKEN=${OPENAI_ACCESS_TOKEN}
      - OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL}
      - OPENAI_API_MODEL=${OPENAI_API_MODEL}
      - API_REVERSE_PROXY=${API_REVERSE_PROXY}
      - AUTH_SECRET_KEY=${AUTH_SECRET_KEY}
      - MAX_REQUEST_PER_HOUR=${MAX_REQUEST_PER_HOUR}
      - TIMEOUT_MS=${TIMEOUT_MS}
      - SOCKS_PROXY_HOST=${SOCKS_PROXY_HOST}
      - SOCKS_PROXY_PORT=${SOCKS_PROXY_PORT}
      - HTTPS_PROXY=${HTTPS_PROXY}

    ports:
      - ${HOST_PORT_CHATGPT_WEB}:3002

    networks:
      - app_net

################################################################################
# NETWORK
################################################################################
networks:
  app_net:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
