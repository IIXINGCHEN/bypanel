###
###  ---------------------------------------------------
###  B Y P A N E L    R U N - T I M E    S E T T I N G S
###  ---------------------------------------------------
###
###  All the following settings are applied during
###  $ docker-compose up
###
###  No need to rebuild any docker images!
###
###  IMPORTANT:
###  ----------
###  When changing any values ensure to stop, rm and restart:
###  $ docker-compose stop
###  $ docker-compose rm -f
###  $ docker-compose up
###
###  NOTE:
###  -----
###  For you own custom variables, scroll to the bottom
###

# The following line will disable any shellcheck warnings throughout this file
# shellcheck disable=SC2034,SC2125


###
### Show all executed commands in each
### docker image during docker-compose up?
###
### 0: Errors
### 1: Errors, Warnings
### 2: Errors, Warnings, Infos  (Recommended)
### 3: Errors, Warnings, Infos, Debug
### 4: Errors, Warnings, Infos, Debug, Trace
DEBUG_ENTRYPOINT=2

###
### Log to file or Docker logs.
###
### Logging to file means log files are available under log/
### on your host operating system.
### Logging to Docker logs means log files are streamed to
### stdout and stderr.
###
### 1: Log to Docker logs
### 0: Log to file
###
DOCKER_LOGS=0

###
### Set language
###
LANG=en

###
### Startup application
###
COMPOSE_PROFILES=nginx,mysql,php82

###
### Sets the project name.
### This value is prepended along with the service name to the container on start up.
### For example, if your project name is myapp and it includes two services db and web,
### then Compose starts containers named myapp_db_1 and myapp_web_1 respectively.
### 
COMPOSE_PROJECT_NAME=bypanel

###
### Relative or absolute path to the bypanel repository.
### (Used as a prefix for all mount paths)
### There is no need to change this.
###
### The only exception is for OSX users wanting to use NFS
### mounts instead of Filesystem mounts due to degraded performance
### on OSX.
###
### Note: When changing this variable you must re-create the container.
###       Simply remove it, it will be auto-created during the next start:
###
### $ docker-compose rm -f
###
BYPANEL_PATH=.

###
### Web, DB, Log base data path
###
VOLUME_PATH=/data

###
### At what IP address should the docker services listen
### on the Host computer?
###
### The specified default should be fine for Linux and OSX (127.0.0.1:).
### If you are on windows, you will probably have to change
### it to the IP address of the docker machine.
###
### a.) Leave blank, to listen on all interfaces (no trailing colon ':')
###    LOCAL_LISTEN_ADDR=
### b.) If an IP is specified, note the trailing colon ':'
###    LOCAL_LISTEN_ADDR=127.0.0.1:
###
LOCAL_LISTEN_ADDR=127.0.0.1:


###
### Set your user id and group id
###
### This should be changed to the value of your local
### users uid and gid
###
### Type `id` on the terminal to find out your values
###
NEW_UID=1000
NEW_GID=1000


###
### Timezone for Docker container
###
TIMEZONE=Asia/Shanghai



################################################################################
###
### 1. Choose Images (Version)
###
################################################################################

###
### You can choose any combination of nginx, mysql, postgresql or php.
### Each of them are fully compatible between one another.
###


###
### 1.1 Choose Nginx Server Image
###
NGINX_SERVER=1.24.0
#NGINX_SERVER=1.25.3


###
### 1.2 Choose MySQL Server Image
###
#MYSQL_SERVER=mysql-5.5
#MYSQL_SERVER=mysql-5.6
#MYSQL_SERVER=mysql-5.7
#MYSQL_SERVER=mysql-8.0
#MYSQL_SERVER=mysql-8.3
#MYSQL_SERVER=percona-5.5
#MYSQL_SERVER=percona-5.6
#MYSQL_SERVER=percona-5.7
#MYSQL_SERVER=percona-8.0
#MYSQL_SERVER=mariadb-5.5
#MYSQL_SERVER=mariadb-10.0
#MYSQL_SERVER=mariadb-10.1
#MYSQL_SERVER=mariadb-10.2
#MYSQL_SERVER=mariadb-10.3
#MYSQL_SERVER=mariadb-10.4
#MYSQL_SERVER=mariadb-10.5
#MYSQL_SERVER=mariadb-10.6
#MYSQL_SERVER=mariadb-10.7
#MYSQL_SERVER=mariadb-10.8
#MYSQL_SERVER=mariadb-10.9
#MYSQL_SERVER=mariadb-10.10
MYSQL_SERVER=mariadb-10.11


###
### 1.3 Choose PostgreSQL Server Image
###
### https://www.postgresql.org/support/versioning/
###
### IMPORTANT: Alpine based images might cause issues on Docker Toolbox or OSX
###            https://github.com/docker/toolbox/issues/510
###
#
# PostgreSQL without arm64 support
#
#PGSQL_SERVER=9.0
#PGSQL_SERVER=9.1
#PGSQL_SERVER=9.2-alpine
#
# PostgreSQL with arm64 support
#
#PGSQL_SERVER=9.2
#PGSQL_SERVER=9.3
#PGSQL_SERVER=9.3-alpine
#PGSQL_SERVER=9.4
#PGSQL_SERVER=9.4-alpine
#PGSQL_SERVER=9.5
#PGSQL_SERVER=9.5-alpine
#PGSQL_SERVER=9.6
#PGSQL_SERVER=9.6-alpine
#PGSQL_SERVER=10
#PGSQL_SERVER=10-alpine
#PGSQL_SERVER=11
#PGSQL_SERVER=11-alpine
#PGSQL_SERVER=12
#PGSQL_SERVER=12-alpine
#PGSQL_SERVER=13
#PGSQL_SERVER=13-alpine
#PGSQL_SERVER=14
PGSQL_SERVER=14-alpine
#PGSQL_SERVER=15
#PGSQL_SERVER=15-alpine
#PGSQL_SERVER=latest
#PGSQL_SERVER=alpine


###
### 1.4 Choose Redis Server Image
###
### IMPORTANT: Alpine based images might cause issues on Docker Toolbox or OSX
###            https://github.com/docker/toolbox/issues/510
###
#
# Redis without arm64 support
#
#REDIS_SERVER=2.8
#REDIS_SERVER=3.0
#REDIS_SERVER=3.0-alpine
#
# Redis with arm64 support
#
#REDIS_SERVER=3.2
#REDIS_SERVER=3.2-alpine
#REDIS_SERVER=4.0
#REDIS_SERVER=4.0-alpine
#REDIS_SERVER=5.0
#REDIS_SERVER=5.0-alpine
#REDIS_SERVER=6.0
#REDIS_SERVER=6.0-alpine
#REDIS_SERVER=6.2
#REDIS_SERVER=6.2-alpine
#REDIS_SERVER=7.0
#REDIS_SERVER=7.0-alpine
#REDIS_SERVER=7.2
REDIS_SERVER=7.2-alpine
#REDIS_SERVER=latest
#REDIS_SERVER=alpine


###
### 1.5 Choose Memcached Server Image
###
### IMPORTANT: Alpine based images might cause issues on Docker Toolbox or OSX
###            https://github.com/docker/toolbox/issues/510
###
#
# Memcached without arm64 support
#
#MEMCACHED_SERVER=1.4
#MEMCACHED_SERVER=1.4-alpine
#
# Memcached with arm64 support
#
#MEMCACHED_SERVER=1.5
#MEMCACHED_SERVER=1.5-alpine
#MEMCACHED_SERVER=1.6
MEMCACHED_SERVER=1.6-alpine
#MEMCACHED_SERVER=latest
#MEMCACHED_SERVER=alpine


###
### 1.6 Choose Mongo Server Image
###
### https://www.mongodb.com/evolved
###
#
# MongoDB without arm64 support
#
#MONGO_SERVER=2.8
#MONGO_SERVER=3.0
#MONGO_SERVER=3.2
#
# MongoDB with arm64 support
#
#MONGO_SERVER=3.4
#MONGO_SERVER=3.6
#MONGO_SERVER=4.0
#MONGO_SERVER=4.2
#MONGO_SERVER=4.4
MONGO_SERVER=5.0
#MONGO_SERVER=6.0
#MONGO_SERVER=7.0
#MONGO_SERVER=latest


###
### 1.7 Choose phpMyAdmin Server Image
###
### https://www.phpmyadmin.net
###
PMA_SERVER=latest


###
### 1.8 Choose sftpgo Server Image
###
### https://github.com/drakkan/sftpgo
###
SFTPGO_SERVER=alpine


###
### 1.9 Choose rabbitmq Server Image
###
### https://rabbitmq.com
###
#RABBITMQ_SERVER=latest
RABBITMQ_SERVER=3.12-management-alpine


################################################################################
###
### 2. Host Mounts (Your computer)
###
################################################################################

###
### Global mount options
###
### Note: When adding custom mount options, ensure to start with a
###       leading ',' (comma), as those options are prepended to already
###       existing mount options.
###
### Note: If no mount options are specified, leave this variable empty
###       and do not add a leading ',' (comma).
###
### MOUNT_OPTIONS=,cached
### MOUNT_OPTIONS=
###
### Example: Allow to share mounts accross container with SELINUX enabled
###
### MOUNT_OPTIONS=,z
###
MOUNT_OPTIONS=


################################################################################
###
### 3. PHP Docker Settings
###
################################################################################

###
### Enable certain PHP modules which are not enabled by default
###
### Currently the only modules that can be enabled are 'ioncube' and 'blackfire'
### Also ensure to disable xdebug when using any of the above:
### https://xdebug.org/docs/install#compat
###
### PHP_MODULES_ENABLE=ioncube, blackfire
###
PHP_MODULES_ENABLE=


###
### Disable any PHP modules that you don't require
###
### Specify a comma separated list without spaces of modules to disable
###
### PHP_MODULES_DISABLE=xdebug,imagick,swoole
###
PHP_MODULES_DISABLE=xdebug,swoole,memcache,memcached,redis,mongodb,pgsql,amqp,apcu,oci8,PDO_OCI,pdo_sqlsrv,sqlsrv,rdkafka,swoole,psr,phalcon


###
### Configure everything else about PHP in
### * cfg/php-ini-X.X/*.ini
### * cfg/php-fpm-X.X/*.conf


################################################################################
###
### 4. Web Docker Settings
###
################################################################################

###
### Expose Web Port to Host
###
HOST_PORT_NGINX=80
HOST_PORT_NGINX_SSL=443

HOST_PORT_OPENRESTY=80
HOST_PORT_OPENRESTY_SSL=443

HOST_PORT_APACHE=80
HOST_PORT_APACHE_SSL=443


################################################################################
###
### 5. MySQL Docker Settings
###
################################################################################

###
### MySQL root user password
###
### The password is required for the initial creation of the MySQL database
### as well as the Devilbox intranet to display schema and configuration settings.
###
### If you change your MySQL root user password via mysql cli, phpMyAdmin or other tools
### after the database has been created, ensure to adjust the value here accordingly as well.
###
### If you only change this value here after the database has been created,
### the MySQL root user password will not actually be changed and the Devilbox intranet
### won't be able to connect to the MySQL service.
###
MYSQL_ROOT_PASSWORD=bypanel


###
### Expose MySQL Port to Host
###
HOST_PORT_MYSQL=3306


################################################################################
###
### 6. PostgreSQL Docker Settings
###
################################################################################

###
### PostgreSQL 'root' user name (usually postgres)
###
PGSQL_ROOT_USER=postgres


###
### PostgreSQL 'root' user password
###
### If you want to set a password, ensure to remove 'trust' from
### PGSQL_HOST_AUTH_METHOD below
###
PGSQL_ROOT_PASSWORD=bypanel


###
### In order to not use a password for PostgreSQL, keep this value at 'trust'
###
PGSQL_HOST_AUTH_METHOD=trust


###
### Expose PostgreSQL Port to Host
###
HOST_PORT_PGSQL=5432


################################################################################
###
### 7. Redis Docker Settings
###
################################################################################

###
### Expose Redis Port to Host
###
HOST_PORT_REDIS=6379


###
### Custom startup arguments
###
### Apply custom startup arguments to redis
###
### Example: Password protection
###   Add password protection to the Redis server by specifying it should
###   require a password.
###   Note: Do not add quotes or spaces to the password
###
###   REDIS_ARGS="--requirepass my-redis-root-password"
###
### Example: Verbosity
###
###   REDIS_ARGS="--loglevel verbose"
###
#REDIS_ARGS="--loglevel verbose --requirepass my-redis-root-password"
REDIS_ARGS="--appendonly yes"


################################################################################
###
### 8. Memcached Docker Settings
###
################################################################################

###
### Expose Memcached Port to Host
###
HOST_PORT_MEMCACHED=11211


################################################################################
###
### 9. MongoDB Docker Settings
###
################################################################################

###
### Expose MongoDB Port to Host
###
HOST_PORT_MONGO=27017


################################################################################
###
### 10. phpMyAdmin Docker Settings
###
################################################################################

###
### Note: PMA_ARBITRARY - when set to 1 connection to the arbitrary server will be allowed
###       PMA_ABSOLUTE_URI - the full URL to phpMyAdmin. Sometimes needed when used in a reverse-proxy configuration.
###
PMA_ARBITRARY=1
PMA_ABSOLUTE_URI=/phpmyadmin


################################################################################
###
### 11. SFTPGO Docker Settings
###
################################################################################

###
### Expose SFTPGO Port to Host
###
### Note: SFTPGO_FTPD_WEB_ADMIN_PORT - create the first admin and a new SFTPGo user
###       SFTPGO_FTPD_PORT - The FTP service port
###       SFTPGO_FTPD_PASSIVE_PORT_RANGE_START - The FTP service passive start port
###       SFTPGO_FTPD_PASSIVE_PORT_RANGE_END - The FTP service passive end port
###
SFTPGO_FTPD_WEB_ADMIN_PORT=8021
SFTPGO_FTPD_PORT=21
SFTPGO_FTPD_PASSIVE_PORT_RANGE_START=21000
SFTPGO_FTPD_PASSIVE_PORT_RANGE_END=21100


################################################################################
###
### 12. rabbitmq Docker Settings
###
################################################################################
###
### Node: HOST_PORT_RABBITMQ - Expose RabbitMQ Port to Host
###       HOST_PORT_RABBITMQ_MANAGEMENT - Expose RabbitMQ Management Port to Host
###       RABBITMQ_DEFAULT_USER - RabbitMQ Management default user
###       RABBITMQ_DEFAULT_PASS - RabbitMQ Management default password
###       RABBITMQ_DEFAULT_VHOST - RabbitMQ  Management default vhost
###
HOST_PORT_RABBITMQ=5672
HOST_PORT_RABBITMQ_MANAGEMENT=15672
RABBITMQ_DEFAULT_USER=admin
RABBITMQ_DEFAULT_PASS=bypanel
RABBITMQ_DEFAULT_VHOST=/


################################################################################
###
### 13. chatgpt-web Docker Settings
###
################################################################################

###
### Expose chatgpt-web Port to Host
###
HOST_PORT_CHATGPT_WEB=3002

### choose one
OPENAI_API_KEY=sk-xxx
OPENAI_ACCESS_TOKEN=xxx

### API interface address, optional, available when OPENAI_API_KEY is set
OPENAI_API_BASE_URL=https://api.chatanywhere.com.cn

### API model, optional, available when OPENAI_API_KEY is set, https://platform.openai.com/docs/models
### gpt-4, gpt-4-1106-preview, gpt-4-0314, gpt-4-0613, gpt-4-32k, gpt-4-32k-0314, gpt-4-32k-0613, gpt-3.5-turbo-16k, gpt-3.5-turbo-16k-0613, gpt-3.5-turbo, gpt-3.5-turbo-0301, gpt-3.5-turbo-0613, text-davinci-003, text-davinci-002, code-davinci-002
OPENAI_API_MODEL=gpt-3.5-turbo

### reverse proxy, optional
CHATGPT_API_REVERSE_PROXY=

### access permission key, optional
CHATGPT_AUTH_SECRET_KEY=

### maximum number of requests per hour, optional, unlimited by default
CHATGPT_MAX_REQUEST_PER_HOUR=0

### timeout, unit milliseconds, optional
CHATGPT_TIMEOUT_MS=60000

### Socks proxy, optional, take effect with SOCKS_PROXY_PORT
CHATGPT_SOCKS_PROXY_HOST=

### Socks proxy port, optional, take effect with SOCKS_PROXY_HOST
CHATGPT_SOCKS_PROXY_PORT=

### HTTPS proxy, optional, support http,https,socks5
CHATGPT_HTTPS_PROXY=
